/*kalmanjs, Wouter Bulten, MIT, https://github.com/wouterbulten/kalmanjs */
!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):(t=t||self).KalmanFilter=i()}(this,function(){"use strict";function n(t,i){for(var e=0;e<i.length;e++){var n=i[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(){function f(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},i=t.R,e=void 0===i?1:i,n=t.Q,s=void 0===n?1:n,o=t.A,r=void 0===o?1:o,h=t.B,u=void 0===h?0:h,a=t.C,c=void 0===a?1:a;!function(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}(this,f),this.R=e,this.Q=s,this.A=r,this.C=c,this.B=u,this.cov=NaN,this.x=NaN}var t,i,e;return t=f,(i=[{key:"filter",value:function(t){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;if(isNaN(this.x))this.x=1/this.C*t,this.cov=1/this.C*this.Q*(1/this.C);else{var e=this.predict(i),n=this.uncertainty(),s=n*this.C*(1/(this.C*n*this.C+this.Q));this.x=e+s*(t-this.C*e),this.cov=n-s*this.C*n}return this.x}},{key:"predict",value:function(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;return this.A*this.x+this.B*t}},{key:"uncertainty",value:function(){return this.A*this.cov*this.A+this.R}},{key:"lastMeasurement",value:function(){return this.x}},{key:"setMeasurementNoise",value:function(t){this.Q=t}},{key:"setProcessNoise",value:function(t){this.R=t}}])&&n(t.prototype,i),e&&n(t,e),f}()});